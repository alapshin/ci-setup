version: "3.1"

services:
  traefik:
    image: traefik:1.6
    restart: always
    hostname: traefik
    container_name: traefik
    depends_on: 
      - jenkins
      - sonarqube
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "${WORKDIR-.}/acme.json:/acme.json"
      - "${WORKDIR-.}/traefik.toml:/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock"

  postgres:
    image: postgres:10.3
    container_name: postgres
    environment:
      POSTGRES_USER: ${SONARQUBE_JDBC_USER:-sonar} 
      POSTGRES_PASSWORD: ${SONARQUBE_JDBC_PASSWORD:-sonar} 
    volumes:
      - postgres_data:/var/lib/postgresql/data

  jenkins:
    image: alapshin/jenkins-master:2.107.2
    restart: always
    container_name: jenkins
    hostname: jenkins
    environment:
      DOCKER_GROUP: docker
      DOCKER_SOCKET: /var/run/docker.sock
      JENKINS_HOST:
      JENKINS_USER: jenkins
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.backend=jenkins"
      - "traefik.frontend.rule=Host:${JENKINS_HOST-localhost}"
    secrets:
      - source: jenkins_credentials
        target: credentials.yml
      - source: jenkins_admin_credentials
        target: admin_credentials.properties
    volumes:
      - "jenkins_home:/var/jenkins_home"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${WORKDIR-.}/jenkins.yml:/var/jenkins_home/config.yml"

  sonarqube:
    image: alapshin/sonarqube:6.7.2
    container_name: sonarqube
    depends_on: 
      - postgres
    expose:
      - "9000"
    environment:
      SONARQUBE_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONARQUBE_JDBC_USERNAME: ${SONARQUBE_JDBC_USER:-sonar}
      SONARQUBE_JDBC_PASSWORD: ${SONARQUBE_JDBC_PASSWORD:-sonar}
    labels:
      - "traefik.enable=true"
      - "traefik.port=9000"
      - "traefik.backend=sonarqube"
      - "traefik.frontend.rule=Host:${SONARQUBE_HOST-localhost}"
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled_plugins:/opt/sonarqube/lib/bundled-plugins

volumes:
  jenkins_home:
  postgres_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled_plugins:

secrets:
  jenkins_credentials:
    file: "${WORKDIR-.}/secrets/credentials.yml"
  jenkins_admin_credentials:
    file: "${WORKDIR-.}/secrets/admin_credentials.properties"

